var searchIndex = JSON.parse('{\
"jwt_compact":{"doc":"Minimalistic JSON web token (JWT) implementation with â€¦","t":[8,8,13,8,13,4,3,13,4,3,13,13,3,13,13,13,13,13,13,13,13,13,13,13,4,3,16,3,16,3,3,13,3,4,16,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,10,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,12,12,10,11,11,12,0,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,10,12,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,3,3,13,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,8,3,3,13,13,8,3,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,4,13,13,4,13,13,13,13,3,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Algorithm","AlgorithmExt","AlgorithmMismatch","AlgorithmSignature","CborClaims","Claim","Claims","Claims","CreationError","Empty","Expiration","Expired","Header","Header","InvalidBase64Encoding","InvalidSignature","InvalidTokenStructure","MalformedCborClaims","MalformedClaims","MalformedHeader","MalformedSignature","NoClaim","NotBefore","NotMature","ParseError","Renamed","Signature","SignedToken","SigningKey","TimeOptions","Token","UnsupportedContentType","UntrustedToken","ValidationError","VerifyingKey","alg","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_sha1_thumbprint","certificate_thumbprint","certificate_url","clock_fn","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compact_token","custom","default","deserialize","eq","eq","expiration","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","issued_at","jwk","key_id","key_set_url","leeway","name","name","new","not_before","prelude","serialize","sign","sign","signature","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","token","token","token_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_slice","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_for_signed_token","validate_integrity","verify_signature","verify_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","expected","0","0","Ed25519","Es256k","FourKibibytes","Hs256","Hs256Key","Hs256Signature","Hs384","Hs384Key","Hs384Signature","Hs512","Hs512Key","Hs512Signature","ModulusBits","ModulusBitsError","RSAPrivateKey","RSAPublicKey","Rsa","RsaSignature","SecretBytes","SigningKey","StrongAlg","StrongKey","ThreeKibibytes","TwoKibibytes","VerifyingKey","WeakKeyError","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","d","decrypt","decrypt_blinded","default","default","default","default","default","default","deref","deref","deserialize","drop","drop","drop","drop","drop","e","e","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encrypt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_components","from_pkcs1","from_pkcs1","from_pkcs8","from_pkcs8","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","generate","generate","generate","generate","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","n","n","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","new","new","new","new","new","new","new_with_exp","owned","precompute","primes","ps256","ps384","ps512","rs256","rs384","rs512","serialize","sign","sign","sign","sign","sign","sign","sign","sign","sign_blinded","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pkcs1","to_pkcs8","to_public_key","to_public_key","to_string","to_string","to_verifying_key","to_verifying_key","to_verifying_key","to_verifying_key","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_slice","try_from_slice","try_from_slice","try_from_slice","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","verify","verify_signature","verify_signature","verify_signature","verify_signature","verify_signature","verify_signature","verify_signature","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_name","with_specific_name","zeroize","zeroize","zeroize","zeroize","Custom","EllipticCurve","EllipticCurve","JsonWebKey","JwkError","KeyPair","KeyPair","KeyType","MismatchedKeys","NoField","Rsa","Rsa","RsaPrimeFactor","RsaPrivateParts","Symmetric","Symmetric","UnexpectedKeyType","UnexpectedLen","UnexpectedValue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","crt_coefficient","crt_exponent","custom","deserialize","deserialize","deserialize","eq","eq","eq","eq","factor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","is_signing_key","key_type","ne","ne","ne","other_prime_factors","p_crt_exponent","prime_factor_p","prime_factor_q","private_exponent","q_crt_coefficient","q_crt_exponent","serialize","serialize","serialize","source","thumbprint","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_verifying_key","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","curve","curve","modulus","private_parts","public_exponent","secret","secret","secret","x","x","y","actual","actual","actual","expected","expected","expected","field","field","Claims","Header","TimeOptions","Token","UntrustedToken","_","algorithm","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_sha1_thumbprint","certificate_thumbprint","certificate_url","claims","clock_fn","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compact_token","custom","default","default","deserialize","deserialize","empty","eq","expiration","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_leeway","header","header","into","into","into","into","into","issued_at","key_id","key_set_url","leeway","ne","new","new","new","not_before","serialize","serialize","set_duration","set_duration_and_issuance","set_not_before","signature_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","token","token_type","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_expiration","validate_for_signed_token","validate_integrity","validate_maturity","vzip","vzip","vzip","vzip","vzip","with_certificate_sha1_thumbprint","with_certificate_thumbprint","with_certificate_url","with_key_id","with_key_set_url","with_token_type"],"q":["jwt_compact","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jwt_compact::ValidationError","","jwt_compact::algjwt_compact::jwk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jwt_compact::jwk::JsonWebKey","","","","","","","","","","","jwt_compact::jwk::JwkError","","","","","","","","jwt_compact::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["JWT signing algorithm.","Automatically implemented extensions of the <code>Algorithm</code> â€¦","Algorithm mentioned in the token header differs from â€¦","Signature for a certain JWT signing <code>Algorithm</code>.","Token claims cannot be serialized into CBOR.","Identifier of a claim in <code>Claims</code>.","Claims encoded in a token.","Token claims cannot be serialized into JSON.","Errors that can occur during token creation.","A structure with no fields that can be used as a type â€¦","<code>exp</code> claim (expiration time).","Token has expired.","JWT header.","Token header cannot be serialized.","Cannot decode base64.","Token signature has failed verification.","Token has invalid structure.","Token claims cannot be deserialized from CBOR.","Token claims cannot be deserialized from JSON.","Token header cannot be parsed.","Token signature is malformed (e.g., has an incorrect â€¦","Claim requested during validation is not present in the â€¦","<code>nbf</code> claim (valid not before).","Token is not yet valid as per <code>nbf</code> claim.","Errors that may occur during token parsing.","Algorithm that uses a custom name when creating and â€¦","Signature produced by the algorithm.","<code>Token</code> together with the validated token signature.","Key used when issuing new tokens.","Time-related options for token creation and validation.","Token with validated integrity.","Content type mentioned in the token header is not â€¦","Parsed, but unvalidated token.","Errors that can occur during token validation.","Key used when verifying tokens. May coincide with â€¦","Implementations of JWT signing / verification algorithms. â€¦","Represents this signature as bytes.","","","","","","","","","","","","","","","SHA-1 thumbprint of the X.509 certificate for the signing â€¦","SHA-256 thumbprint of the X.509 certificate for the â€¦","URL of the X.509 certificate for the signing key. This â€¦","Source of the current timestamps.","","","","","","","","","Creates a new token with CBOR-encoded claims and â€¦","Custom claims.","","","","","Expiration time of the token.","","","","","","","","","","","","","","","","","","","","","","","","","","","Time of token issuance.","Basic support of JSON Web Keys (JWK).","Identifier of the key that has signed the token. This â€¦","URL of the JSON Web Key Set containing the key that has â€¦","Leeway to use during validation.","Returns the name of this algorithm, as mentioned in the â€¦","","Creates a renamed algorithm.","Minimum time at which token is valid.","Prelude to neatly import all necessary stuff from the â€¦","","Signs a <code>message</code> with the <code>signing_key</code>.","","Token signature.","","","","","","","","","","","","Creates a new token and serializes it to string.","Verified token.","Application-specific token type. This field is renamed to â€¦","","","","","","","","Attempts to restore a signature from a byte slice. This â€¦","","","","","","","","","","","","","","","Validates the token integrity against the provided â€¦","Validates the token integrity against the provided â€¦","Verifies the <code>message</code> against the <code>signature</code> and â€¦","","","","","","","","","Actual algorithm in the token.","Expected algorithm name.","","","Integrity algorithm using digital signatures on the â€¦","Algorithm implementing elliptic curve digital signatures â€¦","4096 bits.","<code>HS256</code> signing algorithm.","Signing / verifying key for <code>HS256</code> algorithm. Zeroed on â€¦","Signature produced by the [<code>Hs256</code>] algorithm.","<code>HS384</code> signing algorithm.","Signing / verifying key for <code>HS384</code> algorithm. Zeroed on â€¦","Signature produced by the [<code>Hs384</code>] algorithm.","<code>HS512</code> signing algorithm.","Signing / verifying key for <code>HS512</code> algorithm. Zeroed on â€¦","Signature produced by the [<code>Hs512</code>] algorithm.","Bit length of an RSA key modulus (aka RSA key length).","Error type returned when a conversion of an integer into â€¦","Represents a whole RSA key, public and private parts.","Represents the public part of an RSA key.","Integrity algorithm using RSA digital signatures.","RSA signature.","Generic container for secret bytes, which can be either â€¦","Signing key for a specific signature cryptosystem. In the â€¦","Wrapper around a JWT algorithm signalling that it â€¦","Wrapper around keys allowing to enforce key strength â€¦","3072 bits.","2048 bits. This is the minimum recommended key length as â€¦","Verifying key for a specific signature cryptosystem. In â€¦","Error type used for fallible conversion into a [<code>StrongKey</code>]â€¦","Returns the key as raw bytes.","Returns the key as raw bytes.","","","","","","","","","","","","","","","","","","","Converts this length to the numeric value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates secret bytes from a borrowed slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the private exponent of the key.","Decrypt the given message.","Decrypt the given message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an RSA key pair from the individual components.","Parse a <code>PKCS1</code> encoded RSA Public Key.","Parse a <code>PKCS1</code> encoded RSA Private Key.","Parse a <code>PKCS8</code> encoded RSA Public Key.","Parse a <code>PKCS8</code> encoded RSA Private Key.","Creates a key from <code>raw</code> bytes. Returns an error if the â€¦","Creates a key from <code>raw</code> bytes. Returns an error if the â€¦","","","","","","","Generates a random key using a cryptographically secure â€¦","Generates a random key using a cryptographically secure â€¦","Generates a random key using a cryptographically secure â€¦","Generates a new key pair with the specified modulus bit â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the wrapped value.","","","","","","","","","","","","","","","Creates a key from the specified <code>bytes</code>.","Creates a key from the specified <code>bytes</code>.","Creates a key from the specified <code>bytes</code>.","Creates a new algorithm instance. This is a (moderately) â€¦","Create a new key from its components.","Generate a new RSA key pair of the given bit size using â€¦","Generate a new RSA key pair of the given bit size and the â€¦","Creates secret bytes from an owned <code>Vec</code>.","Performs some calculations to speed up private key â€¦","Returns the prime factors.","RSA with SHA-256 and PSS padding.","RSA with SHA-384 and PSS padding.","RSA with SHA-512 and PSS padding.","RSA with SHA-256 and PKCS#1 v1.5 padding.","RSA with SHA-384 and PKCS#1 v1.5 padding.","RSA with SHA-512 and PKCS#1 v1.5 padding.","","","","","","","","","Sign the given digest.","Sign the given digest.","","","","","","","","","","","","","","","","","","","Converts this private key to a public key.","Get the public key from the private key, cloning <code>n</code> and <code>e</code>.","","","Converts a signing key to a verification key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses a <code>PKCS8</code> or <code>PKCS1</code> encoded RSA Public Key.","","Parses a <code>PKCS8</code> or <code>PKCS1</code> encoded RSA Private Key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs basic sanity checks on the key. Returns <code>Ok(())</code> â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RSA based on the specified algorithm name.","Creates an algorithm instance with the algorithm name â€¦","","","","","Custom error specific to a crypto backend.","Public or private key in an ECDSA crypto system. â€¦","Public or private key in an ECDSA crypto system. Has <code>kty</code> â€¦","Basic JWK functionality: (de)serialization and creating â€¦","Errors that can occur when transforming a [<code>JsonWebKey</code>] â€¦","Generic asymmetric keypair. Corresponds to the <code>OKP</code> value â€¦","Generic asymmetric keypair. This key type is used e.g. â€¦","Type of a [<code>JsonWebKey</code>].","Signing and verifying keys do not match.","Required field is absent from JWK.","Public or private RSA key. Corresponds to the <code>RSA</code> value â€¦","Public or private RSA key. Has <code>kty</code> field set to <code>RSA</code>.","Block for an additional prime factor in [<code>RsaPrivateParts</code>].","Parts of [<code>JsonWebKey::Rsa</code>] that are specific to private â€¦","Symmetric key. Corresponds to the <code>oct</code> value of the <code>kty</code> â€¦","Generic symmetric key, e.g. for <code>HS256</code> algorithm. Has <code>kty</code> â€¦","Key type (the <code>kty</code> field) is not as expected.","JWK field has an unexpected byte length.","JWK field has an unexpected value.","","","","","","","","","","","","","","","","","","","Factor CRT coefficient (<code>t</code>).","Factor CRT exponent (<code>d</code>).","Creates a <code>Custom</code> error variant.","","","","","","","","Prime factor (<code>r</code>).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this key can be used for signing (has [â€¦","Gets the type of this key.","","","","Other prime factors.","First factor CRT exponent (<code>dp</code>).","First prime factor (<code>p</code>).","Second prime factor (<code>q</code>).","Private exponent (<code>d</code>).","CRT coefficient of the second factor (<code>qi</code>).","Second factor CRT exponent (<code>dq</code>).","","","","","Computes a thumbprint of this JWK. The result complies â€¦","","","","","","","","Returns a copy of this key with parts not necessary for â€¦","","","","","","","","","","","","","","","","","","","","","Curve name (<code>crv</code>), such as <code>secp256k1</code>.","Curve name (<code>crv</code>), such as <code>Ed25519</code>.","Key modulus (<code>n</code>).","Private RSA parameters. Only present for private keys.","Public exponent (<code>e</code>).","Secret scalar (<code>d</code>); not present for public keys.","Bytes representing this key.","Secret key (<code>d</code>). For Ed25519, this is the seed.","<code>x</code> coordinate of the curve point.","Public key. For Ed25519, this is the standard 32-byte â€¦","<code>y</code> coordinate of the curve point.","Actual key type.","Actual value of the field.","Actual byte length of the field.","Expected key type.","Expected value of the field.","Expected byte length of the field.","Field name.","Field name.","Claims encoded in a token.","JWT header.","Time-related options for token creation and validation.","Token with validated integrity.","Parsed, but unvalidated token.","Automatically implemented extensions of the <code>Algorithm</code> â€¦","Gets the integrity algorithm used to secure the token.","","","","","","","","","","","SHA-1 thumbprint of the X.509 certificate for the signing â€¦","SHA-256 thumbprint of the X.509 certificate for the â€¦","URL of the X.509 certificate for the signing key. This â€¦","Gets token claims.","Source of the current timestamps.","","","","","","","","","","","Creates a new token with CBOR-encoded claims and â€¦","Custom claims.","","","","","Creates an empty claims instance.","","Expiration time of the token.","","","","","","","","","","","Creates options based on the specified time leeway. The â€¦","Gets the token header.","Gets token header.","","","","","","Time of token issuance.","Identifier of the key that has signed the token. This â€¦","URL of the JSON Web Key Set containing the key that has â€¦","Leeway to use during validation.","","Creates options based on the specified time leeway and â€¦","Creates a new instance with the provided custom claims.","Creates an untrusted token from a string. This is a â€¦","Minimum time at which token is valid.","","","Sets the <code>expiration</code> claim so that the token has the â€¦","Atomically sets <code>issued_at</code> and <code>expiration</code> claims: first to â€¦","Sets the <code>nbf</code> claim.","Returns signature bytes from the token. These bytes are <strong>â€¦","","","","","","Creates a new token and serializes it to string.","Application-specific token type. This field is renamed to â€¦","","","","","","","","","","","","","","","","","Validates the expiration claim.","Validates the token integrity against the provided â€¦","Validates the token integrity against the provided â€¦","Validates the maturity time (<code>nbf</code> claim).","","","","","","Sets the <code>certificate_sha1_thumbprint</code> field for this â€¦","Sets the <code>certificate_thumbprint</code> field for this header.","Sets the <code>certificate_url</code> field for this header.","Sets the <code>key_id</code> field for this header.","Sets the <code>key_set_url</code> field for this header.","Sets the <code>token_type</code> field for this header."],"i":[0,0,1,0,2,0,0,2,0,0,3,1,0,2,4,1,4,1,1,4,1,1,3,1,0,0,5,0,5,0,0,4,0,0,5,0,6,7,8,4,1,3,2,9,7,8,4,1,3,2,9,10,10,10,11,7,8,3,9,7,8,3,9,12,13,8,8,8,3,13,7,8,4,4,1,1,3,3,2,2,9,7,8,4,1,3,2,9,8,7,8,4,1,3,2,9,13,0,10,10,11,5,9,9,13,0,8,5,9,7,4,1,2,7,8,3,9,4,1,3,2,12,7,10,7,8,4,1,3,2,9,6,7,8,4,1,3,2,9,7,8,4,1,3,2,9,12,12,5,9,7,8,4,1,3,2,9,14,14,15,16,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,18,19,20,21,22,23,23,24,24,25,25,26,23,24,25,27,23,24,25,28,17,27,20,21,22,23,24,25,29,30,31,32,33,26,17,34,35,28,15,16,36,37,27,20,21,22,23,24,25,29,30,31,32,33,26,17,34,35,28,15,16,36,37,27,27,20,21,22,23,24,25,29,30,31,33,17,28,16,36,37,27,20,21,22,23,24,25,29,30,31,33,17,28,16,36,37,37,37,37,29,30,31,32,33,16,27,37,27,27,23,24,25,37,36,37,27,23,24,25,28,27,23,24,25,28,36,27,20,21,22,29,30,31,33,17,28,36,37,27,20,21,22,23,24,25,29,30,31,32,33,26,17,34,34,35,28,15,15,16,36,37,27,20,21,22,23,23,24,24,25,25,29,30,31,32,33,26,17,34,35,28,15,16,36,36,36,37,37,36,37,36,37,18,19,23,23,24,24,25,25,23,24,25,35,29,30,31,33,27,20,21,22,23,24,25,29,30,31,32,33,26,17,34,35,28,15,16,36,37,28,36,37,29,30,31,32,33,35,16,20,21,22,28,36,23,24,25,32,36,37,37,27,37,37,35,35,35,35,35,35,27,29,30,31,32,33,35,16,37,37,27,20,21,22,23,24,25,29,30,31,33,17,28,16,36,37,37,37,28,37,34,15,19,23,24,25,27,20,21,22,23,23,24,24,25,25,29,30,31,32,33,26,17,17,34,35,28,28,28,28,28,28,15,16,36,36,36,37,37,37,20,21,22,26,27,20,21,22,23,24,25,29,30,31,32,33,26,17,34,35,28,15,16,36,37,27,20,21,22,23,24,25,29,30,31,32,33,26,17,34,35,28,15,16,36,37,37,36,29,30,31,32,33,35,16,27,20,21,22,23,24,25,29,30,31,32,33,26,17,34,35,28,15,16,36,37,35,33,23,24,25,37,38,39,40,0,0,39,40,0,38,38,39,40,0,0,39,40,38,38,38,39,38,40,41,42,39,38,40,41,42,39,40,41,42,39,40,41,42,42,42,38,40,41,42,39,40,41,42,42,39,39,38,38,40,40,41,42,39,38,40,40,40,40,40,40,40,40,40,40,41,42,39,39,38,40,41,42,40,40,40,41,42,41,41,41,41,41,41,41,40,41,42,38,40,39,40,41,42,39,38,40,40,39,38,40,41,42,39,38,40,41,42,39,38,40,41,42,39,38,40,41,42,43,44,45,45,45,43,46,44,43,44,43,47,48,49,47,48,49,48,49,0,0,0,0,0,0,50,11,13,10,50,51,11,13,10,50,51,10,10,10,51,11,11,13,10,50,51,11,13,10,50,51,12,13,11,10,13,10,13,13,13,11,13,10,50,51,11,13,10,50,51,11,50,51,11,13,10,50,51,13,10,10,11,13,11,13,50,13,13,10,13,13,13,50,11,13,10,50,51,12,10,11,13,10,50,50,51,11,13,10,50,51,11,13,10,50,51,13,12,12,13,11,13,10,50,51,10,10,10,10,10,10],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cow",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[],["empty",3]],[[],["claim",4]],[[],["renamed",3]],[[]],[[]],[[]],[[]],[[["claims",3],["header",3]],[["string",3],["result",4],["creationerror",4]]],null,[[],["empty",3]],[[],["result",4]],[[["empty",3]],["bool",15]],[[["claim",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[["str",15]]],null,null,[[],["result",4]],[[]],[[]],null,[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["claims",3],["header",3]],[["string",3],["result",4],["creationerror",4]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["untrustedtoken",3]],[["result",4],["validationerror",4],["signedtoken",3]]],[[["untrustedtoken",3]],[["token",3],["result",4],["validationerror",4]]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cow",4]],[[],["secretbytes",3]],[[],["cow",4]],[[],["cow",4]],[[],["cow",4]],[[],["cow",4]],[[],["secretbytes",3]],[[],["cow",4]],[[],["secretbytes",3]],[[],["secretbytes",3]],[[],["cow",4]],[[],["cow",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["secretbytes",3]],[[],["hs256signature",3]],[[],["hs384signature",3]],[[],["hs512signature",3]],[[],["hs256key",3]],[[],["hs384key",3]],[[],["hs512key",3]],[[],["hs256",3]],[[],["hs384",3]],[[],["hs512",3]],[[],["ed25519",3]],[[],["modulusbits",4]],[[],["strongkey",3]],[[],["strongalg",3]],[[],["rsapublickey",3]],[[],["rsaprivatekey",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["biguint",3]],[[["paddingscheme",4]],[["vec",3],["error",4],["result",4]]],[[["paddingscheme",4]],[["vec",3],["error",4],["result",4]]],[[],["hs256",3]],[[],["hs384",3]],[[],["hs512",3]],[[]],[[],["ed25519",3]],[[],["strongalg",3]],[[]],[[],["rsapublickey",3]],[[["deserializer",8]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["biguint",3]],[[],["biguint",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["paddingscheme",4]],[["vec",3],["error",4],["result",4]]],[[],["bool",15]],[[["hs256signature",3]],["bool",15]],[[["hs384signature",3]],["bool",15]],[[["hs512signature",3]],["bool",15]],[[["hs256",3]],["bool",15]],[[["hs384",3]],["bool",15]],[[["hs512",3]],["bool",15]],[[["ed25519",3]],["bool",15]],[[["modulusbits",4]],["bool",15]],[[["strongkey",3]],["bool",15]],[[["rsapublickey",3]],["bool",15]],[[["rsaprivatekey",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rsaprivatekey",3]],["rsapublickey",3]],[[["rsaprivatekey",3]],["rsapublickey",3]],[[]],[[["vec",3],["global",3],["biguint",3]],["rsaprivatekey",3]],[[],[["result",4],["rsapublickey",3],["error",4]]],[[],[["result",4],["rsaprivatekey",3],["error",4]]],[[],[["result",4],["rsapublickey",3],["error",4]]],[[],[["result",4],["rsaprivatekey",3],["error",4]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["strongkey",3]],[[],["strongkey",3]],[[],["strongkey",3]],[[["modulusbits",4]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["biguint",3]],[[],["biguint",3]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[["hs256signature",3]],["bool",15]],[[["hs384signature",3]],["bool",15]],[[["hs512signature",3]],["bool",15]],[[["strongkey",3]],["bool",15]],[[["rsapublickey",3]],["bool",15]],[[]],[[]],[[]],[[["all",4],["secp256k1",3]]],[[["biguint",3]],[["result",4],["rsapublickey",3],["error",4]]],[[["usize",15]],[["result",4],["rsaprivatekey",3],["error",4]]],[[["usize",15],["biguint",3]],[["result",4],["rsaprivatekey",3],["error",4]]],[[["vec",3],["u8",15]]],[[],[["error",4],["result",4]]],[[]],[[],["rsa",3]],[[],["rsa",3]],[[],["rsa",3]],[[],["rsa",3]],[[],["rsa",3]],[[],["rsa",3]],[[["serializer",8]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["paddingscheme",4]],[["vec",3],["error",4],["result",4]]],[[["paddingscheme",4]],[["vec",3],["error",4],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3],["error",4],["result",4]]],[[],[["vec",3],["error",4],["result",4]]],[[],[["strongkey",3],["rsapublickey",3]]],[[],["rsapublickey",3]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["jsonwebkey",4]],["result",4]],[[],["result",4]],[[["jsonwebkey",4]],["result",4]],[[],["result",4]],[[["jsonwebkey",4]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["rsapublickey",3]],["result",4]],[[["hs256key",3]],["result",4]],[[],["result",4]],[[["rsaprivatekey",3]],["result",4]],[[["hs512key",3]],["result",4]],[[["hs384key",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["jsonwebkey",4]],["result",4]],[[["pem",3]],[["result",4],["rsapublickey",3],["error",4]]],[[],["result",4]],[[["pem",3]],[["result",4],["rsaprivatekey",3],["error",4]]],[[],["result",4]],[[["jsonwebkey",4]],["result",4]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["error",4],["result",4]]],[[["paddingscheme",4]],[["error",4],["result",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[],["renamed",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keytype",4]],[[],["jsonwebkey",4]],[[],["rsaprivateparts",3]],[[],["rsaprimefactor",3]],[[]],[[]],[[]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["keytype",4]],["bool",15]],[[["jsonwebkey",4]],["bool",15]],[[["rsaprivateparts",3]],["bool",15]],[[["rsaprimefactor",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["secretkey",3]],["jsonwebkey",4]],[[["hs512key",3]],["jsonwebkey",4]],[[["publickey",3]],["jsonwebkey",4]],[[["publickey",3]],["jsonwebkey",4]],[[["secretkey",3]],["jsonwebkey",4]],[[["hs384key",3]],["jsonwebkey",4]],[[]],[[["rsaprivatekey",3]],["jsonwebkey",4]],[[["hs256key",3]],["jsonwebkey",4]],[[["rsapublickey",3]],["jsonwebkey",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["keytype",4]],[[["jsonwebkey",4]],["bool",15]],[[["rsaprivateparts",3]],["bool",15]],[[["rsaprimefactor",3]],["bool",15]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",8],["option",4]]],[[],[["output",6],["digest",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["claims",3]],null,[[],["timeoptions",3]],[[],["claims",3]],[[],["header",3]],[[],["untrustedtoken",3]],[[],["token",3]],[[]],[[]],[[]],[[]],[[]],[[["claims",3],["header",3]],[["string",3],["result",4],["creationerror",4]]],null,[[]],[[],["header",3]],[[],["result",4]],[[],["result",4]],[[]],[[["claims",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]]],[[],["header",3]],[[],["header",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["claims",3]],["bool",15]],[[["duration",3]]],[[]],[[],[["parseerror",4],["result",4]]],null,[[],["result",4]],[[],["result",4]],[[["timeoptions",3],["duration",3]]],[[["timeoptions",3],["duration",3]]],[[["utc",3],["datetime",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["claims",3],["header",3]],[["string",3],["result",4],["creationerror",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["timeoptions",3]],[["result",4],["validationerror",4]]],[[["untrustedtoken",3]],[["result",4],["validationerror",4],["signedtoken",3]]],[[["untrustedtoken",3]],[["token",3],["result",4],["validationerror",4]]],[[["timeoptions",3]],[["result",4],["validationerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"ValidationError"],[4,"CreationError"],[4,"Claim"],[4,"ParseError"],[8,"Algorithm"],[8,"AlgorithmSignature"],[3,"SignedToken"],[3,"Empty"],[3,"Renamed"],[3,"Header"],[3,"TimeOptions"],[8,"_"],[3,"Claims"],[13,"AlgorithmMismatch"],[3,"WeakKeyError"],[3,"StrongAlg"],[4,"ModulusBits"],[8,"VerifyingKey"],[8,"SigningKey"],[3,"Hs256Signature"],[3,"Hs384Signature"],[3,"Hs512Signature"],[3,"Hs256Key"],[3,"Hs384Key"],[3,"Hs512Key"],[3,"RsaSignature"],[3,"SecretBytes"],[3,"StrongKey"],[3,"Hs256"],[3,"Hs384"],[3,"Hs512"],[3,"Es256k"],[3,"Ed25519"],[3,"ModulusBitsError"],[3,"Rsa"],[3,"RSAPublicKey"],[3,"RSAPrivateKey"],[4,"JwkError"],[4,"KeyType"],[4,"JsonWebKey"],[3,"RsaPrivateParts"],[3,"RsaPrimeFactor"],[13,"EllipticCurve"],[13,"KeyPair"],[13,"Rsa"],[13,"Symmetric"],[13,"UnexpectedKeyType"],[13,"UnexpectedValue"],[13,"UnexpectedLen"],[3,"UntrustedToken"],[3,"Token"]]}\
}');
initSearch(searchIndex);